---
- name: Provision ec2 instances for Opneshift Cluster
  hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - vars/dev-environment.yml
    - vars/aws-creds.yml

  tasks:

  - name: Launch Master Node
    ec2: 
      region: eu-west-2
      ec2_access_key: "{{ ec2_access_key }}"
      ec2_secret_key: "{{ ec2_secret_key }}"
      image: ami-7c1bfd1b
      keypair: london
      instance_type: t2.micro
      group: "default"
      wait: true
      instance_tags:
          Name: Master_Node
      count_tag:
        Name: worker_node
      exact_count: "{{num_masters}}"
    register: master
      
  - name: Launch Infra Node
    ec2: 
      region: eu-west-2
      ec2_access_key: "{{ ec2_access_key }}"
      ec2_secret_key: "{{ ec2_secret_key }}"
      image: ami-7c1bfd1b
      keypair: london
      instance_type: t2.micro
      group: "default"
      wait: true
      instance_tags:
          Name: Infra_Node
      count_tag:
        Name: worker_node
      exact_count: "{{num_infras}}"
    register: infra
      
  - name: Launch Worker Nodes
    ec2: 
      region: eu-west-2
      ec2_access_key: "{{ ec2_access_key }}"
      ec2_secret_key: "{{ ec2_secret_key }}"
      image: ami-7c1bfd1b
      keypair: london
      instance_type: t2.micro
      group: "default"
      wait: true
      instance_tags:
          Name: Worker_Node
      count_tag:
        Name: worker_node
      exact_count: "{{num_workers}}"
    register: worker
     
  - name: Wait for SSH to come up
    wait_for:
       host: "{{ item.public_dns_name }}"
       port: 22
       delay: 120
       timeout: 200
       state: started
    with_items: "{{ worker.instances }}"
    
  - name: add host to host group
    add_host:
       hostname: "{{ item.public_dns_name }}"
       groups: Cluster
    with_items:
      - "{{ master.instances }}"
      - "{{ infra.instances }}"
      - "{{ worker.instances }}"
  - name: add host to host group ( Worker 1 ) 
    add_host:
       hostname: "{{ item.public_dns_name }}"
       groups: worker1
    with_items:
      - "{{ worker.instances }}"
      
  - name: add host to host group ( Infra 1 )
    add_host:
       hostname: "{{ item.public_dns_name }}"
       groups: infra1
    with_items:
      - "{{ infra.instances }}"
   
- name: Config Repos File
  hosts: Cluster
  become: yes
  vars:
   ansible_ssh_private_key_file: "./london.pem"
   ansible_ssh_user: ec2-user
  tasks:
  - name : Copy Repo Files  
    template:
      src: repos.j2
      dest: /etc/yum.repos.d/openshift.repo    
  - name: Disable old Repos and update with new ones ( That might take few minutes )
    shell: |
       mv /etc/yum.repos.d/redhat.{repo,disabled}
       yum clean all
       yum -y update
  - name: Installing Packages
    yum:
      name: "{{ item }}"
      state: latest
    with_items:
     - NetworkManager
     - bash-completion
     - docker
  - name: Configure Docker 
    service:
       name: docker
       state: stopped
       enabled: yes
  - name: 
    shell: rm -rf /var/lib/docker/*

  - name: 
    template:
        src: docker-storage.j2
        dest: /etc/sysconfig/docker-storage-setup
  - name: 
    shell: |
      docker-storage-setup
      systemctl enable docker
      systemctl start docker
- name: Pull Docker Images for Worker Nodes
  hosts: worker1
  become: yes
  vars:
    ansible_ssh_private_key_file: "./london.pem"
    ansible_ssh_user: ec2-user
  tasks:
  - shell: |
       REGISTRY="registry.access.redhat.com";PTH="openshift3"
   
      
      
      
      
    
    
       
     
     
  
    
      
      
      
        
      
      
